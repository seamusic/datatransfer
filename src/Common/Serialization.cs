///////////////////////////////////////////////////////////
//  Serialization.cs
//  Implementation of the Class Serialization
//  Generated by Enterprise Architect
//  Created on:      12-ÆßÔÂ-2012 11:10:50
//  Original author: wayne
///////////////////////////////////////////////////////////


using System.IO;
using System.Runtime.Serialization.Formatters.Binary;
using System.Runtime.Serialization.Formatters.Soap;

namespace Daan.DataTransfer.DataCommon
{
    public class Serialization
    {
        /// 
        /// <param name="stream"></param>
        public static T DeSerialize<T>(MemoryStream stream)
        {
            BinaryFormatter b = new BinaryFormatter();
            stream.Position = 0;
            object deObject = b.Deserialize(stream);
            stream.Close();

            return (T)deObject;
        }

        /// 
        /// <param name="object"></param>
        public static MemoryStream Serialize<T>(T o)
        {
            //using (var stream = new MemoryStream())
            {
                var stream = new MemoryStream();
                var formater = new BinaryFormatter();
                formater.Serialize(stream, o);
                return stream;
            }
        }
    }
}