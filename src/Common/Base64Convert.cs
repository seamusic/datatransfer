///////////////////////////////////////////////////////////
//  Base64Convert.cs
//  Implementation of the Class Base64Convert
//  Generated by Enterprise Architect
//  Created on:      12-ÆßÔÂ-2012 11:11:25
//  Original author: wayne
///////////////////////////////////////////////////////////


using System;
using System.IO;
using System.Text;

namespace Daan.DataTransfer.DataCommon
{
    public class Base64Convert : DataProcessBase
    {
        /// 
        /// <param name="stream"></param>
        public static MemoryStream FrmBase64(MemoryStream stream)
        {

            if (stream == null)
            {
                return null;
            }

            string s = System.Text.Encoding.Default.GetString(stream.ToArray());
            var bs = Convert.FromBase64String(s);
            return new MemoryStream(bs);
        }

        /// 
        /// <param name="stream"></param>
        public static MemoryStream ToBase64(MemoryStream stream)
        {
            var base64String = Convert.ToBase64String(stream.ToArray());
            var bs = System.Text.Encoding.Default.GetBytes(base64String);
            return new MemoryStream(bs);
        }

        public static string ToBase64(string base64String)
        {
            return Convert.ToBase64String(Encoding.Default.GetBytes(base64String));
        }

        public static string FrmBase64(string stream)
        {
            return Encoding.Default.GetString(Convert.FromBase64String(stream));
        }


        public override byte[] Process(byte[] data)
        {
            var base64String = Convert.ToBase64String(data);
            return System.Text.Encoding.Default.GetBytes(base64String);
        }

        public override byte[] DeProcess(byte[] data)
        {
            var s = System.Text.Encoding.Default.GetString(data);
            return Convert.FromBase64String(s);
        }
    }//end Base64Convert

}//end namespace DataTransfer