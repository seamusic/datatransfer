///////////////////////////////////////////////////////////
//  StreamHeandler.cs
//  Implementation of the Class StreamHeandler
//  Generated by Enterprise Architect
//  Created on:      12-ÆßÔÂ-2012 11:10:35
//  Original author: wayne
///////////////////////////////////////////////////////////


using System.IO;
using System.Runtime.Serialization.Formatters.Binary;

namespace Daan.DataTransfer.DataCommon
{
    public class StreamHeandler
    {
        /// 
        /// <param name="objects"></param>
        //public static MemoryStream DataToStream<T>(T objects)
        //{
        //    MemoryStream ms = new MemoryStream();
        //    BinaryFormatter b = new BinaryFormatter();
        //    ms.Position = 0;
        //    b.Serialize(ms, objects);

        //    return ms;
        //}

        //public static T StreamToData<T>(MemoryStream memoryStream)
        //{
        //    BinaryFormatter b = new BinaryFormatter();
        //    memoryStream.Position = 0;
        //    var deObject = b.Deserialize(memoryStream);
        //    memoryStream.Close();
        //    return (T)deObject;
        //}

        /// 
        /// <param name="stream"></param>
        public static string StreamToString(MemoryStream stream)
        {
            var str = string.Empty;
            if (stream != null)
            {
                str = System.Text.Encoding.UTF8.GetString(stream.ToArray());
                stream.Close();
                return str;
            }
            return str;
        }

        public static MemoryStream StringToStream(string data)
        {
            var bs = System.Text.Encoding.UTF8.GetBytes(data);
            return new MemoryStream(bs);
        }
    }
}