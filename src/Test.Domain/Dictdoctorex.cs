/*
insert license info here
*/
using System;

namespace Daan.DataTransfer.Test.Domain
{
	/// <summary>
	///	Generated by MyGeneration using the IBatis Object Mapping template
	/// </summary>
	[Serializable]
    public sealed class Dictdoctorex : DomainBase
	{
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private float _dictdoctorid; 
		private DateTime _createdate; 
		private DateTime _activedate; 
		private string _sex; 
		private string _saleman; 
		private string _area; 
		private DateTime _birthday; 
		private string _idcard; 
		private string _workno; 
		private string _createby; 
		private string _dept; 
		private string _tel; 
		private string _phone; 
		private string _duties; 
		private float _salemanid; 
		private float _editby; 
		private DateTime _editdate; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public Dictdoctorex()
		{
			_dictdoctorid = 0; 
			_createdate = new DateTime(); 
			_activedate = new DateTime(); 
			_sex = null; 
			_saleman = null; 
			_area = null; 
			_birthday = new DateTime(); 
			_idcard = null; 
			_workno = null; 
			_createby = null; 
			_dept = null; 
			_tel = null; 
			_phone = null; 
			_duties = null; 
			_salemanid = 0; 
			_editby = 0; 
			_editdate = new DateTime(); 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 会员id，关联dictdoctor表
		/// </summary>		
		public float Dictdoctorid
		{
			get { return _dictdoctorid; }
			set { _isChanged |= (_dictdoctorid != value); _dictdoctorid = value; }
		}
			
		/// <summary>
		/// 注册日期
		/// </summary>		
		public DateTime Createdate
		{
			get { return _createdate; }
			set { _isChanged |= (_createdate != value); _createdate = value; }
		}
			
		/// <summary>
		/// 生效日期
		/// </summary>		
		public DateTime Activedate
		{
			get { return _activedate; }
			set { _isChanged |= (_activedate != value); _activedate = value; }
		}
			
		/// <summary>
		/// 性别
		/// </summary>		
		public string Sex
		{
			get { return _sex; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for Sex", value, value.ToString());
				
				_isChanged |= (_sex != value); _sex = value;
			}
		}
			
		/// <summary>
		/// 业务员
		/// </summary>		
		public string Saleman
		{
			get { return _saleman; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Saleman", value, value.ToString());
				
				_isChanged |= (_saleman != value); _saleman = value;
			}
		}
			
		/// <summary>
		/// 区域
		/// </summary>		
		public string Area
		{
			get { return _area; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Area", value, value.ToString());
				
				_isChanged |= (_area != value); _area = value;
			}
		}
			
		/// <summary>
		/// 生日
		/// </summary>		
		public DateTime Birthday
		{
			get { return _birthday; }
			set { _isChanged |= (_birthday != value); _birthday = value; }
		}
			
		/// <summary>
		/// 身份证
		/// </summary>		
		public string Idcard
		{
			get { return _idcard; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Idcard", value, value.ToString());
				
				_isChanged |= (_idcard != value); _idcard = value;
			}
		}
			
		/// <summary>
		/// 会员工号
		/// </summary>		
		public string Workno
		{
			get { return _workno; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Workno", value, value.ToString());
				
				_isChanged |= (_workno != value); _workno = value;
			}
		}
			
		/// <summary>
		/// 录入人
		/// </summary>		
		public string Createby
		{
			get { return _createby; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Createby", value, value.ToString());
				
				_isChanged |= (_createby != value); _createby = value;
			}
		}
			
		/// <summary>
		/// 科室
		/// </summary>		
		public string Dept
		{
			get { return _dept; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Dept", value, value.ToString());
				
				_isChanged |= (_dept != value); _dept = value;
			}
		}
			
		/// <summary>
		/// 电话
		/// </summary>		
		public string Tel
		{
			get { return _tel; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Tel", value, value.ToString());
				
				_isChanged |= (_tel != value); _tel = value;
			}
		}
			
		/// <summary>
		/// 手机
		/// </summary>		
		public string Phone
		{
			get { return _phone; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for Phone", value, value.ToString());
				
				_isChanged |= (_phone != value); _phone = value;
			}
		}
			
		/// <summary>
		/// 职务
		/// </summary>		
		public string Duties
		{
			get { return _duties; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Duties", value, value.ToString());
				
				_isChanged |= (_duties != value); _duties = value;
			}
		}
			
		/// <summary>
		/// userID
		/// </summary>		
		public float Salemanid
		{
			get { return _salemanid; }
			set { _isChanged |= (_salemanid != value); _salemanid = value; }
		}
			
		/// <summary>
		/// 导入人
		/// </summary>		
		public float Editby
		{
			get { return _editby; }
			set { _isChanged |= (_editby != value); _editby = value; }
		}
			
		/// <summary>
		/// 导入时间
		/// </summary>		
		public DateTime Editdate
		{
			get { return _editdate; }
			set { _isChanged |= (_editdate != value); _editdate = value; }
		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		
	}
}
