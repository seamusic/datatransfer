/*
insert license info here
*/
using System;

namespace Daan.DataTransfer.Test.Domain
{
	/// <summary>
	///	Generated by MyGeneration using the IBatis Object Mapping template
	/// </summary>
	[Serializable]
    public sealed class Instrumentseq : DomainBase
	{
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private float _instrumentseqid; 
		private float _instrumentid; 
		private string _subbarcode; 
		private string _preseq; 
		private string _seq; 
		private DateTime _matchdate; 
		private float _matchby; 
		private float _status; 
		private DateTime _createdate; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public Instrumentseq()
		{
			_instrumentseqid = 0; 
			_instrumentid = 0; 
			_subbarcode = null; 
			_preseq = null; 
			_seq = null; 
			_matchdate = new DateTime(); 
			_matchby = 0; 
			_status = 0; 
			_createdate = new DateTime(); 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 主键
		/// </summary>		
		public float Instrumentseqid
		{
			get { return _instrumentseqid; }
			set { _isChanged |= (_instrumentseqid != value); _instrumentseqid = value; }
		}
			
		/// <summary>
		/// 仪器ID
		/// </summary>		
		public float Instrumentid
		{
			get { return _instrumentid; }
			set { _isChanged |= (_instrumentid != value); _instrumentid = value; }
		}
			
		/// <summary>
		/// 条码号
		/// </summary>		
		public string Subbarcode
		{
			get { return _subbarcode; }
			set	
			{
				if( value!= null && value.Length > 40)
					throw new ArgumentOutOfRangeException("Invalid value for Subbarcode", value, value.ToString());
				
				_isChanged |= (_subbarcode != value); _subbarcode = value;
			}
		}
			
		/// <summary>
		/// 流水号前缀
		/// </summary>		
		public string Preseq
		{
			get { return _preseq; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Preseq", value, value.ToString());
				
				_isChanged |= (_preseq != value); _preseq = value;
			}
		}
			
		/// <summary>
		/// 流水号
		/// </summary>		
		public string Seq
		{
			get { return _seq; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Seq", value, value.ToString());
				
				_isChanged |= (_seq != value); _seq = value;
			}
		}
			
		/// <summary>
		/// 匹配日期
		/// </summary>		
		public DateTime Matchdate
		{
			get { return _matchdate; }
			set { _isChanged |= (_matchdate != value); _matchdate = value; }
		}
			
		/// <summary>
		/// 匹配人
		/// </summary>		
		public float Matchby
		{
			get { return _matchby; }
			set { _isChanged |= (_matchby != value); _matchby = value; }
		}
			
		/// <summary>
		/// 状态 0-未传数据   1-已传数据
		/// </summary>		
		public float Status
		{
			get { return _status; }
			set { _isChanged |= (_status != value); _status = value; }
		}
			
		/// <summary>
		/// 生成日期
		/// </summary>		
		public DateTime Createdate
		{
			get { return _createdate; }
			set { _isChanged |= (_createdate != value); _createdate = value; }
		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		
	}
}
