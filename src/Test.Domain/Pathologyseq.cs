/*
insert license info here
*/
using System;

namespace Daan.DataTransfer.Test.Domain
{
	/// <summary>
	///	Generated by MyGeneration using the IBatis Object Mapping template
	/// </summary>
	[Serializable]
    public sealed class Pathologyseq : DomainBase
	{
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private float _pathologyseqid; 
		private float _dictpathologytypeid; 
		private string _subbarcode; 
		private string _seq; 
		private DateTime _matchdate; 
		private float _matchby; 
		private float _status; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public Pathologyseq()
		{
			_pathologyseqid = 0; 
			_dictpathologytypeid = 0; 
			_subbarcode = null; 
			_seq = null; 
			_matchdate = new DateTime(); 
			_matchby = 0; 
			_status = 0; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 主键
		/// </summary>		
		public float Pathologyseqid
		{
			get { return _pathologyseqid; }
			set { _isChanged |= (_pathologyseqid != value); _pathologyseqid = value; }
		}
			
		/// <summary>
		/// 病理类型ID
		/// </summary>		
		public float Dictpathologytypeid
		{
			get { return _dictpathologytypeid; }
			set { _isChanged |= (_dictpathologytypeid != value); _dictpathologytypeid = value; }
		}
			
		/// <summary>
		/// 条码号
		/// </summary>		
		public string Subbarcode
		{
			get { return _subbarcode; }
			set	
			{
				if( value!= null && value.Length > 40)
					throw new ArgumentOutOfRangeException("Invalid value for Subbarcode", value, value.ToString());
				
				_isChanged |= (_subbarcode != value); _subbarcode = value;
			}
		}
			
		/// <summary>
		/// 流水号
		/// </summary>		
		public string Seq
		{
			get { return _seq; }
			set	
			{
				if( value!= null && value.Length > 40)
					throw new ArgumentOutOfRangeException("Invalid value for Seq", value, value.ToString());
				
				_isChanged |= (_seq != value); _seq = value;
			}
		}
			
		/// <summary>
		/// 匹配日期
		/// </summary>		
		public DateTime Matchdate
		{
			get { return _matchdate; }
			set { _isChanged |= (_matchdate != value); _matchdate = value; }
		}
			
		/// <summary>
		/// 匹配人
		/// </summary>		
		public float Matchby
		{
			get { return _matchby; }
			set { _isChanged |= (_matchby != value); _matchby = value; }
		}
			
		/// <summary>
		/// 状态 0-未对标条码号   1-已对应条码号
		/// </summary>		
		public float Status
		{
			get { return _status; }
			set { _isChanged |= (_status != value); _status = value; }
		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		
	}
}
