/*
insert license info here
*/
using System;

namespace Daan.DataTransfer.Test.Domain
{
	/// <summary>
	///	Generated by MyGeneration using the IBatis Object Mapping template
	/// </summary>
	[Serializable]
    public sealed class Dictcustomerexcelmap : DomainBase
	{
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private float _dictcustomerexcelmapid; 
		private float _dictcustomerid; 
		private string _tablename; 
		private string _fieldname; 
		private string _columntitle; 
		private string _sitecode; 
		private string _isdefault; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public Dictcustomerexcelmap()
		{
			_dictcustomerexcelmapid = 0; 
			_dictcustomerid = 0; 
			_tablename = null; 
			_fieldname = null; 
			_columntitle = null; 
			_sitecode = null; 
			_isdefault = null; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 主键ID，序列生成
		/// </summary>		
		public float Dictcustomerexcelmapid
		{
			get { return _dictcustomerexcelmapid; }
			set { _isChanged |= (_dictcustomerexcelmapid != value); _dictcustomerexcelmapid = value; }
		}
			
		/// <summary>
		/// 客户ID，对应dictcustomer
		/// </summary>		
		public float Dictcustomerid
		{
			get { return _dictcustomerid; }
			set { _isChanged |= (_dictcustomerid != value); _dictcustomerid = value; }
		}
			
		/// <summary>
		/// 对应数据库的表名
		/// </summary>		
		public string Tablename
		{
			get { return _tablename; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Tablename", value, value.ToString());
				
				_isChanged |= (_tablename != value); _tablename = value;
			}
		}
			
		/// <summary>
		/// 对应数据库的字段名
		/// </summary>		
		public string Fieldname
		{
			get { return _fieldname; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Fieldname", value, value.ToString());
				
				_isChanged |= (_fieldname != value); _fieldname = value;
			}
		}
			
		/// <summary>
		/// excel列的标题
		/// </summary>		
		public string Columntitle
		{
			get { return _columntitle; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Columntitle", value, value.ToString());
				
				_isChanged |= (_columntitle != value); _columntitle = value;
			}
		}
			
		/// <summary>
		/// 站点代码，对应系统参数表
		/// </summary>		
		public string Sitecode
		{
			get { return _sitecode; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for Sitecode", value, value.ToString());
				
				_isChanged |= (_sitecode != value); _sitecode = value;
			}
		}
			
		/// <summary>
		/// 是否默认0否，1是，默认配置当客户没有配置映射使用此配置
		/// </summary>		
		public string Isdefault
		{
			get { return _isdefault; }
			set	
			{
				if( value!= null && value.Length > 1)
					throw new ArgumentOutOfRangeException("Invalid value for Isdefault", value, value.ToString());
				
				_isChanged |= (_isdefault != value); _isdefault = value;
			}
		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		
	}
}
