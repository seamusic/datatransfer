/*
insert license info here
*/
using System;

namespace Daan.DataTransfer.Test.Domain
{
	/// <summary>
	///	Generated by MyGeneration using the IBatis Object Mapping template
	/// </summary>
	[Serializable]
    public sealed class Dictqclot : DomainBase
	{
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private float _dictqclotid; 
		private string _lotnum; 
		private float _dictqccontrolid; 
		private string _qcbarcode; 
		private DateTime _effectivedate; 
		private DateTime _expirydate; 
		private float _dictmanufactureid; 
		private float _operateby; 
		private DateTime _createdate; 
		private float _dictinstrumentid; 
		private string _uniqueid; 
		private DateTime _firstuseddate; 
		private string _qcgoal; 
		private string _failure; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public Dictqclot()
		{
			_dictqclotid = 0; 
			_lotnum = null; 
			_dictqccontrolid = 0; 
			_qcbarcode = null; 
			_effectivedate = new DateTime(); 
			_expirydate = new DateTime(); 
			_dictmanufactureid = 0; 
			_operateby = 0; 
			_createdate = new DateTime(); 
			_dictinstrumentid = 0; 
			_uniqueid = null; 
			_firstuseddate = new DateTime(); 
			_qcgoal = null; 
			_failure = null; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 主键，自增长
		/// </summary>		
		public float Dictqclotid
		{
			get { return _dictqclotid; }
			set { _isChanged |= (_dictqclotid != value); _dictqclotid = value; }
		}
			
		/// <summary>
		/// 批号
		/// </summary>		
		public string Lotnum
		{
			get { return _lotnum; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Lotnum", value, value.ToString());
				
				_isChanged |= (_lotnum != value); _lotnum = value;
			}
		}
			
		/// <summary>
		/// 水平ID，对应表DictQCControl
		/// </summary>		
		public float Dictqccontrolid
		{
			get { return _dictqccontrolid; }
			set { _isChanged |= (_dictqccontrolid != value); _dictqccontrolid = value; }
		}
			
		/// <summary>
		/// QC样本号
		/// </summary>		
		public string Qcbarcode
		{
			get { return _qcbarcode; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for Qcbarcode", value, value.ToString());
				
				_isChanged |= (_qcbarcode != value); _qcbarcode = value;
			}
		}
			
		/// <summary>
		/// 生效日期
		/// </summary>		
		public DateTime Effectivedate
		{
			get { return _effectivedate; }
			set { _isChanged |= (_effectivedate != value); _effectivedate = value; }
		}
			
		/// <summary>
		/// 失效日期
		/// </summary>		
		public DateTime Expirydate
		{
			get { return _expirydate; }
			set { _isChanged |= (_expirydate != value); _expirydate = value; }
		}
			
		/// <summary>
		/// 试剂厂家，对应表DictLibrary
		/// </summary>		
		public float Dictmanufactureid
		{
			get { return _dictmanufactureid; }
			set { _isChanged |= (_dictmanufactureid != value); _dictmanufactureid = value; }
		}
			
		/// <summary>
		/// 操作者
		/// </summary>		
		public float Operateby
		{
			get { return _operateby; }
			set { _isChanged |= (_operateby != value); _operateby = value; }
		}
			
		/// <summary>
		/// 生成日期
		/// </summary>		
		public DateTime Createdate
		{
			get { return _createdate; }
			set { _isChanged |= (_createdate != value); _createdate = value; }
		}
			
		/// <summary>
		/// 仪器ID，对应表DictInstrument
		/// </summary>		
		public float Dictinstrumentid
		{
			get { return _dictinstrumentid; }
			set { _isChanged |= (_dictinstrumentid != value); _dictinstrumentid = value; }
		}
			
		/// <summary>
		/// 全国统一码
		/// </summary>		
		public string Uniqueid
		{
			get { return _uniqueid; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Uniqueid", value, value.ToString());
				
				_isChanged |= (_uniqueid != value); _uniqueid = value;
			}
		}
			
		/// <summary>
		/// 首次使用时间
		/// </summary>		
		public DateTime Firstuseddate
		{
			get { return _firstuseddate; }
			set { _isChanged |= (_firstuseddate != value); _firstuseddate = value; }
		}
			
		/// <summary>
		/// 目标值，卫生部或自定
		/// </summary>		
		public string Qcgoal
		{
			get { return _qcgoal; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for Qcgoal", value, value.ToString());
				
				_isChanged |= (_qcgoal != value); _qcgoal = value;
			}
		}
			
		/// <summary>
		/// 是否有效(0有效，1失效)
		/// </summary>		
		public string Failure
		{
			get { return _failure; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for Failure", value, value.ToString());
				
				_isChanged |= (_failure != value); _failure = value;
			}
		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		
	}
}
