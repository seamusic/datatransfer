/*
insert license info here
*/
using System;

namespace Daan.DataTransfer.Test.Domain
{
	/// <summary>
	///	Generated by MyGeneration using the IBatis Object Mapping template
	/// </summary>
	[Serializable]
    public sealed class Distributehead : DomainBase
	{
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private string _rackbarcode; 
		private float _dicttuberackid; 
		private float _distributeby; 
		private DateTime _distributedate; 
		private float _handleby; 
		private DateTime _handledate; 
		private float _receiveby; 
		private DateTime _receivedate; 
		private float _status; 
		private float _currentpos; 
		private float _dictlabdeptid; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public Distributehead()
		{
			_rackbarcode = null; 
			_dicttuberackid = 0; 
			_distributeby = 0; 
			_distributedate = new DateTime(); 
			_handleby = 0; 
			_handledate = new DateTime(); 
			_receiveby = 0; 
			_receivedate = new DateTime(); 
			_status = 0; 
			_currentpos = 0; 
			_dictlabdeptid = 0; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 架子条码号
		/// </summary>		
		public string Rackbarcode
		{
			get { return _rackbarcode; }
			set	
			{
				if( value!= null && value.Length > 40)
					throw new ArgumentOutOfRangeException("Invalid value for Rackbarcode", value, value.ToString());
				
				_isChanged |= (_rackbarcode != value); _rackbarcode = value;
			}
		}
			
		/// <summary>
		/// 架子类型ID，对应表DictTubeRack
		/// </summary>		
		public float Dicttuberackid
		{
			get { return _dicttuberackid; }
			set { _isChanged |= (_dicttuberackid != value); _dicttuberackid = value; }
		}
			
		/// <summary>
		/// 分发人
		/// </summary>		
		public float Distributeby
		{
			get { return _distributeby; }
			set { _isChanged |= (_distributeby != value); _distributeby = value; }
		}
			
		/// <summary>
		/// 分发日期
		/// </summary>		
		public DateTime Distributedate
		{
			get { return _distributedate; }
			set { _isChanged |= (_distributedate != value); _distributedate = value; }
		}
			
		/// <summary>
		/// 交接人
		/// </summary>		
		public float Handleby
		{
			get { return _handleby; }
			set { _isChanged |= (_handleby != value); _handleby = value; }
		}
			
		/// <summary>
		/// 交接日期
		/// </summary>		
		public DateTime Handledate
		{
			get { return _handledate; }
			set { _isChanged |= (_handledate != value); _handledate = value; }
		}
			
		/// <summary>
		/// 实验接收人
		/// </summary>		
		public float Receiveby
		{
			get { return _receiveby; }
			set { _isChanged |= (_receiveby != value); _receiveby = value; }
		}
			
		/// <summary>
		/// 实验接日期
		/// </summary>		
		public DateTime Receivedate
		{
			get { return _receivedate; }
			set { _isChanged |= (_receivedate != value); _receivedate = value; }
		}
			
		/// <summary>
		/// 架子号的打印状态  0-未打印  1-已打印
		/// </summary>		
		public float Status
		{
			get { return _status; }
			set { _isChanged |= (_status != value); _status = value; }
		}
			
		/// <summary>
		/// 当前最大位置号
		/// </summary>		
		public float Currentpos
		{
			get { return _currentpos; }
			set { _isChanged |= (_currentpos != value); _currentpos = value; }
		}
			
		/// <summary>
		/// 外键，对应表DictLibrary物理实验室
		/// </summary>		
		public float Dictlabdeptid
		{
			get { return _dictlabdeptid; }
			set { _isChanged |= (_dictlabdeptid != value); _dictlabdeptid = value; }
		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		
	}
}
