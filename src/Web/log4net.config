<?xml version="1.0"?>

<configuration>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0" />
  </startup>
  <configSections>
    <section name="log4net" type="System.Configuration.IgnoreSectionHandler"/>
  </configSections>
  <appSettings>
  </appSettings>
  <!--日志处理-->
  <log4net debug="true">
    <!--定义输出到文件中-->
    <appender name="LogFileAppender" type="log4net.Appender.RollingFileAppender">
      <!--定义文件存放位置-->
      <file value="logs\" />
      <appendToFile value="true" />
      <rollingStyle value="Date" />
      <!--关掉固定文件名-->
      <staticLogFileName value="false" />
      <!--设置文件名后缀的格式，那个&quot;起到的作用是转义，就是把.log当作字面义，而不是时间日期的格式定义。-->
      <datePattern value="yyyy-MM-dd&quot;.log&quot;" />

      <!--来使用最小锁定模型（minimal locking model），以允许多个进程可以写入同一个文件-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <layout type="log4net.Layout.PatternLayout">
        <!--每条日志末尾的文字说明-->
        <!--输出格式-->
        <!--样例：2008-03-26 13:42:32,111 [10] INFO  Log4NetDemo.MainClass [(null)] - info-->
        <conversionPattern value="时间：%date ;线程ID:[%thread] ;级别：%-5level ;类：%logger property:[%property{NDC}] - ;描述：%message%newline" />
      </layout>
    </appender>
    <!--ide 输出-->
    <appender name="OutputDebugStringAppender" type="log4net.Appender.OutputDebugStringAppender" >
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="--时间：%date 线程ID:[%thread] 级别：%-5level 类：%logger property:[%property{NDC}] - 描述：%message%newline" />
      </layout>
    </appender>
    <!-- 将日志信息写入System.Diagnostics.Trace系统（出现在输出窗口）-->
    <appender name="TraceAppender" type="log4net.Appender.TraceAppender" >
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="--时间：%date 线程ID:[%thread] 级别：%-5level 类：%logger property:[%property{NDC}] - 描述：%message%newline" />
      </layout>
    </appender>

    <!--定义输出到控制台命令行中-->
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="时间：%date 线程ID:[%thread] 级别：%-5level 类：%logger property:[%property{NDC}] - 描述：%message%newline" />
      </layout>
    </appender>
    <!--定义输出到windows事件中-->
    <appender name="EventLogAppender" type="log4net.Appender.EventLogAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="时间：%date 线程ID:[%thread] 级别：%-5level 类：%logger property:[%property{NDC}] - 描述：%message%newline" />
      </layout>
    </appender>

    <!--定义日志的输出媒介，下面定义日志以四种方式输出。也可以下面的按照一种类型或其他类型输出。-->
    <root>
      <!--文件形式记录日志-->
      <appender-ref ref="LogFileAppender" />
      <!--控制台控制显示日志-->
      <!--<appender-ref ref="ConsoleAppender" />-->
      <!--Windows事件日志-->
      <!--<appender-ref ref="EventLogAppender" />-->
      <!--debug 输出-->
      <!--<appender-ref ref="OutputDebugStringAppender" />-->
      <!--ide 输出窗口显示日志-->
      <appender-ref ref="TraceAppender" />
      <!--      <level value="DEBUG"/>-->
    </root>

  </log4net>
</configuration>